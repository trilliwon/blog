{"componentChunkName":"component---src-templates-blog-post-js","path":"/ios/2018-12-29-swift-type/","result":{"data":{"site":{"siteMetadata":{"title":"Won"}},"markdownRemark":{"id":"87c48eaa-8680-52a9-aeb4-08730430b416","excerpt":"reference Named Types A named type is a type that can be given a particular name when it’s defined. Named types include , , , and . For example, instances of a…","html":"<h2><a href=\"https://docs.swift.org/swift-book/ReferenceManual/Types.html\">reference</a></h2>\n<hr>\n<h1>Named Types</h1>\n<blockquote>\n<p>A named type is a type that can be given a particular name when it’s defined. Named types include <code class=\"language-text\">classes</code>, <code class=\"language-text\">structures</code>, <code class=\"language-text\">enumerations</code>, and <code class=\"language-text\">protocols</code>.</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>For example, instances of a user-defined class named MyClass have the type MyClass. In addition to user-defined named types, the Swift standard library defines many commonly used named types, including those that represent arrays, dictionaries, and optional values.</p>\n</blockquote>\n</blockquote>\n<h1>Compound Types</h1>\n<blockquote>\n<p><strong>A compound type is a type without a name</strong>, defined in the Swift language itself. There are two compound types: <code class=\"language-text\">function types</code> and <code class=\"language-text\">tuple types</code>. </p>\n</blockquote>","frontmatter":{"title":"What is type in Swift?","date":"December 30, 2018","description":null}}},"pageContext":{"slug":"/ios/2018-12-29-swift-type/","previous":{"fields":{"slug":"/2018-10-31-tree-and-graph/"},"frontmatter":{"title":"Trees and Graphs"}},"next":{"fields":{"slug":"/ios/2018-12-29-swift-instance-method-and-type-method/"},"frontmatter":{"title":"Instance Method vs Type method"}}}},"staticQueryHashes":["240262808","2841359383"]}