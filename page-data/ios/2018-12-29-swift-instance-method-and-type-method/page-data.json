{"componentChunkName":"component---src-templates-blog-post-js","path":"/ios/2018-12-29-swift-instance-method-and-type-method/","result":{"data":{"site":{"siteMetadata":{"title":"Won"}},"markdownRemark":{"id":"fb13b078-b9f7-51ed-ad0b-ea72cee011be","excerpt":"are functions that belong to instances of a particular class, structure, or enumeration.  You can also define methods that are called on the type itself. These…","html":"<ul>\n<li><code class=\"language-text\">Instance methods</code> are functions that belong to instances of a particular class, structure, or enumeration.</li>\n<li><code class=\"language-text\">type methods</code> You can also define methods that are called on the type itself. These kinds of methods are called type methods. You indicate type methods by writing the static keyword before the method’s func keyword. Classes may also use the class keyword to allow subclasses to override the superclass’s implementation of that method.</li>\n</ul>\n<hr>\n<p><code class=\"language-text\">static</code> <code class=\"language-text\">class</code> : type property</p>\n<ul>\n<li>static, class method 는 타입 메서드, class 메서드는 오버라이딩 가능</li>\n<li><code class=\"language-text\">Instance methods</code> are called on an individual instance of one unique/chosen type.</li>\n<li><code class=\"language-text\">Type methods</code> are called on the actual type, in and of itself.</li>\n<li>Swift 에서는 클래스나 struct 를 타입으로 생각한다.</li>\n</ul>","frontmatter":{"title":"Instance Method vs Type method","date":"December 30, 2018","description":null}}},"pageContext":{"slug":"/ios/2018-12-29-swift-instance-method-and-type-method/","previous":{"fields":{"slug":"/ios/2018-12-29-swift-type/"},"frontmatter":{"title":"What is type in Swift?"}},"next":{"fields":{"slug":"/ios/2018-12-29-swift-closure/"},"frontmatter":{"title":"Swift Closure"}}}},"staticQueryHashes":["240262808","2841359383"]}